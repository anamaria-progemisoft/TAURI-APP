name: "publish"
on:
  push:
    branches:
      - main
      - v0.74

jobs:
  create-release:
    runs-on: ubuntu-latest
    # needs: publishtauri
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      version: 0.0.91
    steps:
      - uses: actions/checkout@v3
      - uses: actions/create-release@v1  # Folosește acțiunea de creare a unui release
        id: create_release
        with:
          tag_name: v${{ env.version }}  # Specifică numele tag-ului pentru release, adăugând 'v' în față
          release_name: Release ${{ env.version }}  # Numele release-ului
          body: Auto-generated release for version ${{ env.version }}  # Corpul release-ului
      - name: List github workspace
        run: ls -a /home/runner/work/tauri-app
      - name: List github workspace
        run: ls -a /home/runner/work/tauri-app/tauri-app
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/src-tauri/target/release/bundle/macos/tauri-app.app.tar.gz
          asset_name: tauri-app.app.tar.gz
          # run: gh release upload v${{ env.version }} ./src-tauri/target/release/bundle/macos/tauri-app.app.tar.gz
          # name: tauri-release  
          # path: 

      # - name: Upload Signature  
      # - uses: actions/upload-artifact@v2  # Folosește acțiunea de încărcare a unui artefact (semnătura)
      #   with:
      #     name: tauri-signature 
      #     path: ./path/to/signature.sig  # Calea către semnătură

      # - name: Update Version in Branch  
      #   run: |  # Rulează o serie de comenzi în stil script
      #     echo "${{ github.ref }}" >> version.txt  # Adaugă versiunea într-un fișier text
      #     echo "Download: https://github.com/${{ github.repository }}/releases/download/v${{ github.ref }}/your-app-name-${{ github.ref }}.tar.gz" >> version.txt  # Adaugă URL-ul pentru descărcare în fișierul text
      #     echo "Signature: https://github.com/${{ github.repository }}/releases/download/v${{ github.ref }}/your-app-name-${{ github.ref }}.tar.gz.sig" >> version.txt  # Adaugă URL-ul semnăturii în fișierul text
      #     git config --global user.email "action@github.com"  # Configurează adresa de email pentru commit
      #     git config --global user.name "GitHub Action"  # Configurează numele utilizatorului pentru commit
      #     git add version.txt  # Adaugă fișierul în starea de 'staged'
      #     git commit -m "Add version ${{ github.ref }} details"  # Realizează un commit          
      #     git push origin main 

      # - name: Print Release URL  
      #   run: echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ github.ref }}"  # Afișează URL-ul release-ului